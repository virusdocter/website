{"version":3,"sources":["img/0-50face.png","img/51-100face.png","img/101-150face.png","img/151_face.png","components/Search/Search.js","components/AirQuality/AirQuality.js","components/MapTile/MapTile.js","components/Detail/Detail.js","components/Head/Head.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","props","react_default","a","createElement","onSubmit","this","updateState","type","name","placeholder","Component","AirQuality","aqi","src","good","alt","className","moderate","bad","extreme","city","getFace","MapTile","position","geo","Map","center","zoom","TileLayer","attribution","url","Details","data","Head","body","style","Helmet_default","API_KEY","App","state","undefined","pm25","pm10","temp","_callee","e","api_call","regenerator_default","wrap","_context","prev","next","_this","preventDefault","target","elements","value","fetch","concat","sent","json","console","log","status","setState","iaqi","v","t","stop","Head_Head","Search_Search","AirQuality_AirQuality","Detail_Details","MapTile_MapTile","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d277a00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0-50face.44d1127f.png\";","module.exports = __webpack_public_path__ + \"static/media/51-100face.8a4c650b.png\";","module.exports = __webpack_public_path__ + \"static/media/101-150face.936cc432.png\";","module.exports = __webpack_public_path__ + \"static/media/151_face.c6eb082f.png\";","import React, { Component } from 'react';\r\n\r\nexport default class Search extends Component {\r\n  render(props) {\r\n    return (\r\n      <div>\r\n          <form onSubmit={this.props.updateState}>\r\n            <input type=\"text\" name=\"city\" placeholder=\"City...\"/>\r\n\t\t        <button>Get Air Quality</button>\r\n          </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport good from '../../img/0-50face.png';\r\nimport moderate from '../../img/51-100face.png';\r\nimport bad from '../../img/101-150face.png';\r\nimport extreme from '../../img/151_face.png';\r\n\r\n\r\nexport default class AirQuality extends Component {\r\n    getFace() {\r\n        if (this.props.aqi <=50) {\r\n            return <img src={good} alt='good face' className='aqiFace-white' />;\r\n        } else if (this.props.aqi  > 50 && this.props.aqi <= 100) {\r\n            return <img src={moderate} alt='moderate face' className='aqiFace-black'/>;\r\n        } else if (this.props.aqi  > 100 && this.props.aqi <=150) {\r\n            return <img src={bad} alt='bad face' className='aqiFace-white'/>;\r\n        } else if (this.props.aqi  > 150) {\r\n            return <img src={extreme} alt='extreme face' className='aqiFace-white'/>;\r\n        }\r\n    };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.props.city}</h1>\r\n        <h1 className='aqi'>{this.props.aqi}</h1>\r\n        <h3 className='subtitle'>Current AQI Air Quality</h3>\r\n        <br />\r\n        {this.getFace(this.props.aqi)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Map, TileLayer} from 'react-leaflet';\r\n\r\nexport default class MapTile extends Component<{}, State> {\r\n  render() {\r\n    const position = this.props.geo;\r\n    return (\r\n      <div>\r\n        <Map className=\"mapId\" center={position} zoom={this.props.zoom}>\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <TileLayer\r\n            attribution='Air  Quality  Tiles &amp;copy <a  href=\"http://waqi.info\">waqi.info</a>'\r\n            url=\"https://tiles.waqi.info/tiles/usepa-aqi/{z}/{x}/{y}.png?token=5525712176a6309f7132c2a668df1c0a951b32c2\"  \r\n          />\r\n        </Map>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Details extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.props.data}</h1>\r\n        <h3 className='subtitle'>{this.props.type}</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nexport default class Head extends Component {\r\n  render() {\r\n    let body;\r\n    \r\n    if (this.props.aqi <=50) {\r\n        body = <body style=\"background-image: linear-gradient(to right, #00ff20, #00fa42, #00f558, #00f06a, #00ea78); color: white\"/>\r\n    } else if (this.props.aqi >= 51 && this.props.aqi <= 100) {\r\n        body = <body style=\"background-image: linear-gradient(to right top, #f0f816, #e5ed11, #dae20b, #d0d805, #c5cd00); color: black\"/>\r\n    } else if (this.props.aqi >= 101 && this.props.aqi <= 150) {\r\n      body = <body style=\"background-image: linear-gradient(to right top, #c56600, #cf771e, #da8734, #e49848, #eea85c); color: white\"/>\r\n    } else if (this.props.aqi > 150) {\r\n      body = <body style=\"background-image: linear-gradient(to right top, #c60000, #d40000, #e20000, #f00000, #ff0000); color: white\"/>\r\n  };\r\n  \r\n    return (\r\n      <div>\r\n        <Helmet>\r\n            {body}\r\n        </Helmet>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Search from \"./components/Search/Search\";\r\nimport AirQuality from \"./components/AirQuality/AirQuality\";\r\nimport Map from \"./components/MapTile/MapTile\";\r\nimport Detail from \"./components/Detail/Detail\";\r\nimport Head from \"./components/Head/Head\";\r\n\r\nconst API_KEY = \"5525712176a6309f7132c2a668df1c0a951b32c2\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    city: 'bangkok',\r\n    aqi: undefined,\r\n    pm25: undefined,\r\n    pm10: undefined,\r\n    temp: undefined,\r\n    geo: undefined,\r\n    zoom: 12,\r\n  }\r\n\r\n  updateState = async (e) => {\r\n    var city = this.state.city;\r\n\r\n    if (e) {\r\n      e.preventDefault();\r\n      city = e.target.elements.city.value;\r\n    }\r\n\r\n    const api_call = await fetch(`https://api.waqi.info/feed/${city}/?token=${API_KEY}`);\r\n    const data = await api_call.json();\r\n    console.log(data);\r\n    if (data.status === \"ok\") {\r\n      this.setState({\r\n        city: data.data.city.name,\r\n        aqi: data.data.aqi,\r\n        pm25: (data.data.iaqi.pm25) ? data.data.iaqi.pm25.v : 'No Data',\r\n        pm10: (data.data.iaqi.pm10) ? data.data.iaqi.pm10.v : 'No Data',\r\n        temp: (data.data.iaqi.t) ? data.data.iaqi.t.v + '°C' : 'No Data',\r\n        geo: data.data.city.geo,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        city: 'City Not Found',\r\n        aqi: 0,\r\n        pm25: 0,\r\n        pm10: 0,\r\n        temp: 0,\r\n        geo: [0,0],\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Head aqi={this.state.aqi} />\r\n        <div className='container-fluid justify-content-center h-100'>\r\n          <div className='row '>\r\n            <div className='col'>\r\n              <Search \r\n                updateState={this.updateState}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className='row h-100'>\r\n            <div className='col-lg-4 h-100 d-flex flex-column'>\r\n              <AirQuality \r\n                aqi={this.state.aqi}\r\n                city={this.state.city}\r\n              />\r\n            </div>\r\n            <div className='col-lg-8'>\r\n              <div className='row'>\r\n                <div className='col'>\r\n                  <Detail \r\n                    type='PM25'\r\n                    data={this.state.pm25}\r\n                  />\r\n                </div>\r\n                <div className='col'>\r\n                <Detail \r\n                    type='PM10'\r\n                    data={this.state.pm10}\r\n                />\r\n                </div>\r\n                <div className='col'>\r\n                  <Detail \r\n                    type='Temperature'\r\n                    data={this.state.temp}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='row'>\r\n                <div className='col'>\r\n                  <Map \r\n                    geo={this.state.geo}\r\n                    zoom={this.state.zoom}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}